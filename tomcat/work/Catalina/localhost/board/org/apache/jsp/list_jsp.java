/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.51
 * Generated at: 2020-06-01 08:20:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/include/menu.jsp", Long.valueOf(1586736670112L));
    _jspx_dependants.put("/include/dbinfo.jsp", Long.valueOf(1586758692893L));
    _jspx_dependants.put("/include/head.jsp", Long.valueOf(1586499054118L));
    _jspx_dependants.put("/include/tail.jsp", Long.valueOf(1586499143803L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');

//MySQL ������ ���� ���� ����
String     dbstring = "jdbc:mysql://127.0.0.1/ezen?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC";
String     user      = "root";
String     pass      = "mySQL1234";

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<title>초간단 게시판</title>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" bgcolor=\"#cccccc\" width=\"100%\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"2\" align=\"center\" height=\"40px\"><strong>초간단 게시판</strong></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\t\t\t\t<td width=\"150px\" height=\"400px\" align=\"center\" valign=\"top\">\r\n");
      out.write("\t\t\t\t\t<a href=\"list.jsp?type=s\">학생용 게시판</a>\r\n");
      out.write("\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t<a href=\"list.jsp?type=t\">교사용 게시판</a>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t<td valign=\"top\">");
      out.write('\r');
      out.write('\n');

//검색 파라메터를 분석한다.
String category = request.getParameter("category");
String key       = request.getParameter("key");
String pageno  = request.getParameter("pageno");
int     perpage  = 5;
int     startPage = 0;
int     maxPage  = 0;

if(category == null || category.equals(""))
{
	category = "0";
}
if(key == null || key.equals(""))
{
	key = "";
}
if(pageno == null || pageno.equals(""))
{
	pageno = "1";
}

//현재 페이지 번호에 따른 시작 결과값 계산
int curpage = Integer.parseInt(pageno);
startPage = (curpage - 1) * perpage;

      out.write("\r\n");
      out.write("<script language=\"javascript\">\r\n");
      out.write("\r\n");
      out.write("//검색을 수행하기 위한 함수\r\n");
      out.write("function DoSearch()\r\n");
      out.write("{\r\n");
      out.write("\tdocument.search_form.submit();\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" bgcolor=\"#fffff0\" width=\"100%\">\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td align=\"center\" height=\"30px\">\r\n");
      out.write("\t\t\t<form id=\"search_form\" name=\"search_form\" method=\"get\" action=\"list.jsp\">\r\n");
      out.write("\t\t\t\t<select id=\"category\" name=\"category\">\r\n");
      out.write("\t\t\t\t\t");

					if( category.equals("0") )
					{
						
      out.write("<option value=\"0\" selected>공지</option>");

					}else
					{
						
      out.write("<option value=\"0\">공지</option>");

					}
					
      out.write("\r\n");
      out.write("\t\t\t\t\t");

					if( category.equals("1") )
					{
						
      out.write("<option value=\"1\" selected>자료</option>");

					}else
					{
						
      out.write("<option value=\"1\">자료</option>");

					}
					
      out.write("\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t<input type=\"text\" size=\"10\" id=\"key\" name=\"key\" value=\"");
      out.print( key );
      out.write("\">\r\n");
      out.write("\t\t\t\t<a href=\"javascript:DoSearch();\"><img src=\"images/search.jpg\" align=\"absmiddle\"></a>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t\t<td align=\"right\">\r\n");
      out.write("\t\t\t[ <a href=\"write.jsp?category=");
      out.print( category );
      out.write("&key=");
      out.print( key );
      out.write("&pageno=");
      out.print( pageno );
      out.write("\">글쓰기</a> ]\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("</table>\r\n");

	//MySQL 연결을 위한 라이브러리를 로딩한다.
	Class.forName("com.mysql.cj.jdbc.Driver");

	//MySQL에 접속한다.
	Connection mConnection = DriverManager.getConnection( dbstring, user ,pass );

	//검색 조건을 생성한다.
	String mWhere = "";
	if(!category.equals(""))
	{
		mWhere  += "where type = '" + category + "' ";
	}
	if(!key.equals(""))
	{
		if(!mWhere.equals(""))
		{
			mWhere  += " and  ";
		}else
		{
			mWhere  += " where  ";
		}
		mWhere  += " title like '%" + key + "%' ";
	}

	//현재 게시판에서 총 게시물의 갯수를 얻는다.
	String mTotalSQL = "";
	mTotalSQL  += "select count(no) as totalrow ";
	mTotalSQL  += "from board ";
	mTotalSQL  += mWhere;
	//out.print(mTotalSQL);
	//out.print("<br>");

	PreparedStatement mTotalStatment  = mConnection.prepareStatement(mTotalSQL,ResultSet.TYPE_SCROLL_INSENSITIVE,
												ResultSet.CONCUR_UPDATABLE);
	ResultSet mTotalSet = mTotalStatment.executeQuery();
	mTotalSet.next();
	int  totalRow           =  Integer.parseInt(mTotalSet.getString("totalrow"));

	//최대 페이지 번호를 얻는다.
	maxPage = totalRow / perpage;
	if( totalRow % perpage != 0)
	{
		maxPage = maxPage + 1;
	}

      out.write("\r\n");
      out.write("※ 총 ");
      out.print( totalRow );
      out.write("개의 게시물이 조회되었습니다.\r\n");
      out.write("<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" bgcolor=\"#ffffff\" width=\"100%\">\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td align=\"center\" width=\"80px\">번호</td>\r\n");
      out.write("\t\t<td align=\"center\">제목</td>\r\n");
      out.write("\t\t<td align=\"center\" width=\"100px\">조회수</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t");

	//등록된 게시물의 목록을 얻는다.
	String mSelectSQL = "";
	
	mSelectSQL += "select no,title,type,hit as 제목 ";
	mSelectSQL += "from board ";
	mSelectSQL += mWhere;
	mSelectSQL += "order by no desc ";
	mSelectSQL += "limit " + startPage + "," + perpage;
	//out.print(mSelectSQL);

	PreparedStatement mSelectStatment  = mConnection.prepareStatement(mSelectSQL,ResultSet.TYPE_SCROLL_INSENSITIVE,
												ResultSet.CONCUR_UPDATABLE);
	ResultSet mResultSet = mSelectStatment.executeQuery();

	//검색된 결과를 얻는다.
	while( mResultSet.next() )
	{
		String no    =  mResultSet.getString("no");
		String title  =  mResultSet.getString("title");
		String type  =  mResultSet.getString("type");
		String hit    =  mResultSet.getString("제목");

		
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td align=\"center\">");
      out.print( no );
      out.write("</td>\r\n");
      out.write("\t\t\t<td><a href=\"view.jsp?category=");
      out.print( category );
      out.write("&key=");
      out.print( key );
      out.write("&pageno=");
      out.print( pageno );
      out.write("&no=");
      out.print( no );
      out.write('"');
      out.write('>');
      out.print( title );
      out.write("</a></td>\r\n");
      out.write("\t\t\t<td align=\"center\">");
      out.print( hit );
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");

	}

	//검색된 결과를 닫는다.
	mResultSet.close();

	//stmt 를 닫는다.
	mSelectStatment.close();

	//MySQL 접속을 종료한다.
	mConnection.close();
	
      out.write("\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td colspan=\"3\" align=\"center\">\r\n");
      out.write("\t\t\t");

			if(curpage <= 1)
			{
				
      out.write("\r\n");
      out.write("\t\t\t\t[ <a href=\"javascript:alert('첫 번째 페이지입니다.');\">이전페이지</a> ] \r\n");
      out.write("\t\t\t\t");

			}else
			{
				
      out.write("\r\n");
      out.write("\t\t\t\t[ <a href=\"list.jsp?category=");
      out.print( category );
      out.write("&key=");
      out.print( key );
      out.write("&pageno=");
      out.print( curpage - 1 );
      out.write("\">이전페이지</a> ] \r\n");
      out.write("\t\t\t\t");

			}


			for(int i=1;i<=maxPage;i++)
			{
				if(i == curpage)
				{
					
      out.write("\r\n");
      out.write("\t\t\t\t\t&nbsp;<a href=\"list.jsp?category=");
      out.print( category );
      out.write("&key=");
      out.print( key );
      out.write("&pageno=");
      out.print( i );
      out.write("\"><strong><font color=\"red\">");
      out.print( i );
      out.write("</font></strong></a>&nbsp;\r\n");
      out.write("\t\t\t\t\t");

				}else
				{
					
      out.write("\r\n");
      out.write("\t\t\t\t\t&nbsp;<a href=\"list.jsp?category=");
      out.print( category );
      out.write("&key=");
      out.print( key );
      out.write("&pageno=");
      out.print( i );
      out.write('"');
      out.write('>');
      out.print( i );
      out.write("</a>&nbsp;\r\n");
      out.write("\t\t\t\t\t");

				}
			}
			
			if(curpage >= maxPage)
			{
				
      out.write("\r\n");
      out.write("\t\t\t\t[ <a href=\"javascript:alert('마지막 페이지입니다.');\">다음페이지</a> ]\r\n");
      out.write("\t\t\t\t");

			}else
			{
				
      out.write("\r\n");
      out.write("\t\t\t\t[ <a href=\"list.jsp?category=");
      out.print( category );
      out.write("&key=");
      out.print( key );
      out.write("&pageno=");
      out.print( curpage + 1 );
      out.write("\">다음페이지</a> ]\r\n");
      out.write("\t\t\t\t");

			}
			
      out.write("\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"2\" height=\"30px\" align=\"center\">Copyright ezen. 2020.</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
